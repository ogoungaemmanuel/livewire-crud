{{-- 
    Notification View Template for {{modelName}}
    This template handles both in-app notifications and email notification content
--}}

{{-- In-App Notification Template --}}
@if(isset($inApp) && $inApp)
<div class="notification-item" data-notification-id="{{ $notification->id ?? '' }}">
    <div class="notification-content">
        <div class="notification-icon">
            @switch($notification->data['action'] ?? 'default')
                @case('created')
                    <i class="bi bi-plus-circle text-success"></i>
                    @break
                @case('updated')
                    <i class="bi bi-pencil-square text-info"></i>
                    @break
                @case('deleted')
                    <i class="bi bi-trash text-danger"></i>
                    @break
                @case('status_changed')
                    <i class="bi bi-arrow-repeat text-warning"></i>
                    @break
                @case('bulk_action')
                    <i class="bi bi-collection text-primary"></i>
                    @break
                @case('import_completed')
                    <i class="bi bi-upload text-success"></i>
                    @break
                @case('export_ready')
                    <i class="bi bi-download text-info"></i>
                    @break
                @case('reminder')
                    <i class="bi bi-bell text-warning"></i>
                    @break
                @default
                    <i class="bi bi-info-circle text-primary"></i>
            @endswitch
        </div>
        
        <div class="notification-text">
            <div class="notification-title">
                @switch($notification->data['action'] ?? 'default')
                    @case('created')
                        New {{modelName}} Created
                        @break
                    @case('updated')
                        {{modelName}} Updated
                        @break
                    @case('deleted')
                        {{modelName}} Deleted
                        @break
                    @case('status_changed')
                        {{modelName}} Status Changed
                        @break
                    @case('bulk_action')
                        Bulk Action Performed
                        @break
                    @case('import_completed')
                        Import Completed
                        @break
                    @case('export_ready')
                        Export Ready
                        @break
                    @case('reminder')
                        {{modelName}} Reminder
                        @break
                    @default
                        {{modelName}} Notification
                @endswitch
            </div>
            
            <div class="notification-message">
                {{ $notification->data['message'] ?? 'No message available' }}
            </div>
            
            <div class="notification-meta">
                <span class="notification-time">
                    {{ $notification->created_at->diffForHumans() }}
                </span>
                @if(isset($notification->data['user_name']))
                    <span class="notification-user">
                        by {{ $notification->data['user_name'] }}
                    </span>
                @endif
            </div>
        </div>
        
        <div class="notification-actions">
            @if(isset($notification->data['{{modelNameLowerCase}}_id']))
                <a href="{{ url('/{{getModuleInput}}/{{getNameInput}}/show/' . $notification->data['{{modelNameLowerCase}}_id']) }}" 
                   class="btn btn-sm btn-outline-primary" title="View {{modelName}}">
                    <i class="bi bi-eye"></i>
                </a>
            @endif
            
            <button type="button" class="btn btn-sm btn-outline-secondary" 
                    onclick="markAsRead('{{ $notification->id }}')" title="Mark as read">
                <i class="bi bi-check"></i>
            </button>
            
            <button type="button" class="btn btn-sm btn-outline-danger" 
                    onclick="deleteNotification('{{ $notification->id }}')" title="Delete">
                <i class="bi bi-x"></i>
            </button>
        </div>
    </div>
</div>
@endif

{{-- Email Notification Template --}}
@if(isset($email) && $email)
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{modelName}} Notification</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        
        .notification-container {
            max-width: 600px;
            margin: 0 auto;
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        .notification-header {
            background: #2c3e50;
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        .notification-header h1 {
            margin: 0;
            font-size: 20px;
        }
        
        .notification-body {
            padding: 30px 20px;
        }
        
        .notification-badge {
            display: inline-block;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
            text-transform: uppercase;
            margin-bottom: 20px;
        }
        
        .badge-created { background: #d4edda; color: #155724; }
        .badge-updated { background: #d1ecf1; color: #0c5460; }
        .badge-deleted { background: #f8d7da; color: #721c24; }
        .badge-status_changed { background: #fff3cd; color: #856404; }
        .badge-bulk_action { background: #e7e8ea; color: #383d41; }
        .badge-import_completed { background: #d4edda; color: #155724; }
        .badge-export_ready { background: #d1ecf1; color: #0c5460; }
        .badge-reminder { background: #fff3cd; color: #856404; }
        .badge-default { background: #e7e8ea; color: #383d41; }
        
        .notification-content {
            background: #f8f9fa;
            border-left: 4px solid #007bff;
            padding: 20px;
            margin: 20px 0;
            border-radius: 0 4px 4px 0;
        }
        
        .notification-details {
            margin: 20px 0;
        }
        
        .detail-row {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #dee2e6;
        }
        
        .detail-row:last-child {
            border-bottom: none;
        }
        
        .detail-label {
            font-weight: bold;
            color: #6c757d;
        }
        
        .button {
            display: inline-block;
            padding: 10px 20px;
            background: #007bff;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            margin: 10px 5px 10px 0;
        }
        
        .button:hover {
            background: #0056b3;
        }
        
        .footer {
            background: #f8f9fa;
            padding: 20px;
            text-align: center;
            font-size: 14px;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <div class="notification-container">
        <div class="notification-header">
            <h1>{{modelName}} Notification</h1>
        </div>
        
        <div class="notification-body">
            <div class="notification-badge badge-{{ $action ?? 'default' }}">
                {{ ucwords(str_replace('_', ' ', $action ?? 'notification')) }}
            </div>
            
            <div class="notification-content">
                <h3>{{ $message ?? 'Notification Update' }}</h3>
                
                @if(${{modelNameLowerCase}} ?? null)
                    <div class="notification-details">
                        <div class="detail-row">
                            <span class="detail-label">{{modelName}} ID:</span>
                            <span>{{ ${{modelNameLowerCase}}->id }}</span>
                        </div>
                        
                        @php
                        $fillableFields = ${{modelNameLowerCase}}->getFillable();
                        $displayFields = array_slice($fillableFields, 0, 3); // Show first 3 fields
                        @endphp
                        
                        @foreach($displayFields as $field)
                            @if(isset(${{modelNameLowerCase}}->{$field}))
                            <div class="detail-row">
                                <span class="detail-label">{{ ucwords(str_replace('_', ' ', $field)) }}:</span>
                                <span>
                                    @if(is_bool(${{modelNameLowerCase}}->{$field}))
                                        {{ ${{modelNameLowerCase}}->{$field} ? 'Yes' : 'No' }}
                                    @elseif(${{modelNameLowerCase}}->{$field} instanceof \Carbon\Carbon)
                                        {{ ${{modelNameLowerCase}}->{$field}->format('M j, Y g:i A') }}
                                    @else
                                        {{ Str::limit(${{modelNameLowerCase}}->{$field}, 50) }}
                                    @endif
                                </span>
                            </div>
                            @endif
                        @endforeach
                        
                        <div class="detail-row">
                            <span class="detail-label">Last Updated:</span>
                            <span>{{ ${{modelNameLowerCase}}->updated_at->format('M j, Y g:i A') }}</span>
                        </div>
                    </div>
                @endif
                
                @if(isset($data) && is_array($data))
                    <div class="notification-details">
                        <h4>Additional Information:</h4>
                        @foreach($data as $key => $value)
                            @if(!in_array($key, ['{{modelNameLowerCase}}_id', 'action', 'message', 'user_id', 'user_name']))
                            <div class="detail-row">
                                <span class="detail-label">{{ ucwords(str_replace('_', ' ', $key)) }}:</span>
                                <span>{{ is_array($value) ? implode(', ', $value) : $value }}</span>
                            </div>
                            @endif
                        @endforeach
                    </div>
                @endif
                
                @if($user ?? null)
                    <div class="detail-row">
                        <span class="detail-label">Performed by:</span>
                        <span>{{ $user->name ?? 'System' }}</span>
                    </div>
                @endif
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
                @if(${{modelNameLowerCase}} ?? null)
                    <a href="{{ url('/{{getModuleInput}}/{{getNameInput}}/show/' . ${{modelNameLowerCase}}->id) }}" class="button">
                        View {{modelName}}
                    </a>
                @endif
                <a href="{{ url('/{{getModuleInput}}/{{getNameInput}}') }}" class="button">
                    View All {{modelPluralTitle}}
                </a>
            </div>
        </div>
        
        <div class="footer">
            <p>This notification was sent from {{ config('app.name') }}</p>
            <p style="font-size: 12px; margin-top: 10px;">
                You received this because you have notifications enabled for {{modelNamePluralLowerCase}}.
            </p>
        </div>
    </div>
</body>
</html>
@endif

{{-- Toast Notification Template --}}
@if(isset($toast) && $toast)
<div class="toast-notification" data-type="{{ $notificationType ?? 'info' }}">
    <div class="toast-icon">
        @switch($action ?? 'default')
            @case('created')
                <i class="bi bi-plus-circle"></i>
                @break
            @case('updated')
                <i class="bi bi-pencil-square"></i>
                @break
            @case('deleted')
                <i class="bi bi-trash"></i>
                @break
            @case('status_changed')
                <i class="bi bi-arrow-repeat"></i>
                @break
            @case('bulk_action')
                <i class="bi bi-collection"></i>
                @break
            @case('import_completed')
                <i class="bi bi-upload"></i>
                @break
            @case('export_ready')
                <i class="bi bi-download"></i>
                @break
            @case('reminder')
                <i class="bi bi-bell"></i>
                @break
            @default
                <i class="bi bi-info-circle"></i>
        @endswitch
    </div>
    <div class="toast-content">
        <div class="toast-title">
            @switch($action ?? 'default')
                @case('created')
                    {{modelName}} Created
                    @break
                @case('updated')
                    {{modelName}} Updated
                    @break
                @case('deleted')
                    {{modelName}} Deleted
                    @break
                @case('status_changed')
                    Status Changed
                    @break
                @case('bulk_action')
                    Bulk Action Complete
                    @break
                @case('import_completed')
                    Import Complete
                    @break
                @case('export_ready')
                    Export Ready
                    @break
                @case('reminder')
                    Reminder
                    @break
                @default
                    Notification
            @endswitch
        </div>
        <div class="toast-message">
            {{ $message ?? 'Action completed successfully' }}
        </div>
    </div>
    <button type="button" class="toast-close" onclick="this.parentElement.remove()">
        <i class="bi bi-x"></i>
    </button>
</div>
@endif

{{-- Broadcast Notification Template --}}
@if(isset($broadcast) && $broadcast)
<script>
window.addEventListener('DOMContentLoaded', function() {
    // Create notification element
    const notification = document.createElement('div');
    notification.className = 'broadcast-notification notification-{{ $notificationType ?? "info" }}';
    notification.innerHTML = `
        <div class="broadcast-icon">
            @switch($action ?? 'default')
                @case('created')
                    <i class="bi bi-plus-circle"></i>
                    @break
                @case('updated')
                    <i class="bi bi-pencil-square"></i>
                    @break
                @case('deleted')
                    <i class="bi bi-trash"></i>
                    @break
                @case('status_changed')
                    <i class="bi bi-arrow-repeat"></i>
                    @break
                @case('bulk_action')
                    <i class="bi bi-collection"></i>
                    @break
                @case('import_completed')
                    <i class="bi bi-upload"></i>
                    @break
                @case('export_ready')
                    <i class="bi bi-download"></i>
                    @break
                @case('reminder')
                    <i class="bi bi-bell"></i>
                    @break
                @default
                    <i class="bi bi-info-circle"></i>
            @endswitch
        </div>
        <div class="broadcast-content">
            <div class="broadcast-title">{{modelName}} Update</div>
            <div class="broadcast-message">{{ $message ?? 'Real-time update received' }}</div>
            <div class="broadcast-time">{{ $timestamp ?? 'Just now' }}</div>
        </div>
        <button type="button" class="broadcast-close" onclick="this.parentElement.remove()">
            <i class="bi bi-x"></i>
        </button>
    `;
    
    // Add to notification container
    const container = document.getElementById('broadcast-notifications') || document.body;
    container.appendChild(notification);
    
    // Auto-remove after 5 seconds
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 5000);
});
</script>
@endif

{{-- CSS Styles for Notifications --}}
@push('styles')
<style>
/* In-App Notification Styles */
.notification-item {
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 10px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.notification-item:hover {
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    transform: translateY(-1px);
}

.notification-content {
    display: flex;
    align-items: flex-start;
    gap: 15px;
}

.notification-icon {
    font-size: 24px;
    width: 40px;
    text-align: center;
    flex-shrink: 0;
}

.notification-text {
    flex: 1;
}

.notification-title {
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 5px;
}

.notification-message {
    color: #6c757d;
    font-size: 14px;
    margin-bottom: 8px;
}

.notification-meta {
    font-size: 12px;
    color: #adb5bd;
}

.notification-time {
    margin-right: 10px;
}

.notification-actions {
    display: flex;
    flex-direction: column;
    gap: 5px;
    flex-shrink: 0;
}

/* Toast Notification Styles */
.toast-notification {
    position: fixed;
    top: 20px;
    right: 20px;
    background: white;
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 1000;
    max-width: 350px;
    display: flex;
    align-items: center;
    gap: 12px;
    animation: slideInRight 0.3s ease;
}

.toast-notification[data-type="success"] { border-left: 4px solid #28a745; }
.toast-notification[data-type="error"] { border-left: 4px solid #dc3545; }
.toast-notification[data-type="warning"] { border-left: 4px solid #ffc107; }
.toast-notification[data-type="info"] { border-left: 4px solid #007bff; }

.toast-icon {
    font-size: 20px;
    flex-shrink: 0;
}

.toast-content {
    flex: 1;
}

.toast-title {
    font-weight: 600;
    margin-bottom: 4px;
}

.toast-message {
    font-size: 14px;
    color: #6c757d;
}

.toast-close {
    background: none;
    border: none;
    font-size: 16px;
    cursor: pointer;
    color: #adb5bd;
    flex-shrink: 0;
}

.toast-close:hover {
    color: #6c757d;
}

/* Broadcast Notification Styles */
.broadcast-notification {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background: white;
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 1000;
    max-width: 350px;
    display: flex;
    align-items: center;
    gap: 12px;
    animation: slideInUp 0.3s ease;
}

.broadcast-notification.notification-success { border-left: 4px solid #28a745; }
.broadcast-notification.notification-error { border-left: 4px solid #dc3545; }
.broadcast-notification.notification-warning { border-left: 4px solid #ffc107; }
.broadcast-notification.notification-info { border-left: 4px solid #007bff; }

.broadcast-icon {
    font-size: 20px;
    flex-shrink: 0;
    color: #007bff;
}

.broadcast-content {
    flex: 1;
}

.broadcast-title {
    font-weight: 600;
    margin-bottom: 4px;
}

.broadcast-message {
    font-size: 14px;
    color: #6c757d;
    margin-bottom: 4px;
}

.broadcast-time {
    font-size: 12px;
    color: #adb5bd;
}

.broadcast-close {
    background: none;
    border: none;
    font-size: 16px;
    cursor: pointer;
    color: #adb5bd;
    flex-shrink: 0;
}

.broadcast-close:hover {
    color: #6c757d;
}

/* Animations */
@keyframes slideInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInUp {
    from {
        transform: translateY(100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

/* Responsive Design */
@media (max-width: 768px) {
    .toast-notification,
    .broadcast-notification {
        left: 10px;
        right: 10px;
        max-width: none;
    }
    
    .notification-actions {
        flex-direction: row;
    }
}
</style>
@endpush

{{-- JavaScript Functions --}}
@push('scripts')
<script>
function markAsRead(notificationId) {
    fetch(`/notifications/${notificationId}/read`, {
        method: 'POST',
        headers: {
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
            'Content-Type': 'application/json',
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.querySelector(`[data-notification-id="${notificationId}"]`).style.opacity = '0.5';
            showToast('Notification marked as read', 'success');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showToast('Failed to mark as read', 'error');
    });
}

function deleteNotification(notificationId) {
    if (confirm('Are you sure you want to delete this notification?')) {
        fetch(`/notifications/${notificationId}`, {
            method: 'DELETE',
            headers: {
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.querySelector(`[data-notification-id="${notificationId}"]`).remove();
                showToast('Notification deleted', 'success');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Failed to delete notification', 'error');
        });
    }
}

function showToast(message, type = 'info', duration = 3000) {
    const toast = document.createElement('div');
    toast.className = `toast-notification`;
    toast.setAttribute('data-type', type);
    toast.innerHTML = `
        <div class="toast-icon">
            <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'error' ? 'x-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle'}"></i>
        </div>
        <div class="toast-content">
            <div class="toast-message">${message}</div>
        </div>
        <button type="button" class="toast-close" onclick="this.parentElement.remove()">
            <i class="bi bi-x"></i>
        </button>
    `;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
        if (toast.parentElement) {
            toast.remove();
        }
    }, duration);
}
</script>
@endpush