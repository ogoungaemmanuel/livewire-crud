@extends('layouts.app')

@section('title', '{{modelPluralTitle}} Calendar')

@section('content')
<!-- FullCalendar CSS -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.5/main.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.0.0/css/all.min.css" rel="stylesheet">

<style>
    .calendar-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px 0;
        margin-bottom: 30px;
        border-radius: 10px;
    }
    
    .calendar-stats {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        padding: 20px;
        margin-bottom: 30px;
    }
    
    .stat-card {
        text-align: center;
        padding: 15px;
        border-radius: 8px;
        background: #f8f9fa;
        border-left: 4px solid #007bff;
        transition: all 0.3s ease;
    }
    
    .stat-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .stat-number {
        font-size: 2rem;
        font-weight: bold;
        color: #007bff;
        margin-bottom: 5px;
    }
    
    .stat-label {
        color: #6c757d;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .calendar-container {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 20px rgba(0,0,0,0.1);
        overflow: hidden;
    }
    
    .calendar-toolbar {
        background: #f8f9fa;
        padding: 15px 20px;
        border-bottom: 1px solid #dee2e6;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 10px;
    }
    
    .calendar-actions {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }
    
    .calendar-legend {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
        align-items: center;
    }
    
    .legend-item {
        display: flex;
        align-items: center;
        gap: 5px;
        font-size: 0.9rem;
    }
    
    .legend-color {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        display: inline-block;
    }
    
    #calendar {
        padding: 20px;
        min-height: 600px;
    }
    
    /* FullCalendar Customizations */
    .fc-toolbar-title {
        font-size: 1.5rem !important;
        font-weight: 600 !important;
        color: #333 !important;
    }
    
    .fc-button {
        border-radius: 6px !important;
        border: none !important;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;
        transition: all 0.3s ease !important;
    }
    
    .fc-button:hover {
        transform: translateY(-1px) !important;
        box-shadow: 0 4px 8px rgba(0,0,0,0.15) !important;
    }
    
    .fc-button-primary {
        background: #007bff !important;
        border-color: #007bff !important;
    }
    
    .fc-button-primary:hover {
        background: #0056b3 !important;
        border-color: #0056b3 !important;
    }
    
    .fc-button-primary:disabled {
        background: #6c757d !important;
        border-color: #6c757d !important;
    }
    
    .fc-event {
        border-radius: 4px !important;
        border: none !important;
        box-shadow: 0 1px 3px rgba(0,0,0,0.2) !important;
        transition: all 0.3s ease !important;
        cursor: pointer !important;
    }
    
    .fc-event:hover {
        transform: translateY(-1px) !important;
        box-shadow: 0 3px 8px rgba(0,0,0,0.3) !important;
    }
    
    .fc-event-title {
        font-weight: 500 !important;
    }
    
    .fc-daygrid-day:hover {
        background-color: rgba(0,123,255,0.05) !important;
    }
    
    .fc-day-today {
        background-color: rgba(0,123,255,0.1) !important;
    }
    
    /* Event status colors */
    .event-active { background-color: #28a745 !important; border-color: #28a745 !important; }
    .event-inactive { background-color: #6c757d !important; border-color: #6c757d !important; }
    .event-pending { background-color: #ffc107 !important; border-color: #ffc107 !important; color: #212529 !important; }
    .event-completed { background-color: #17a2b8 !important; border-color: #17a2b8 !important; }
    .event-cancelled { background-color: #dc3545 !important; border-color: #dc3545 !important; }
    .event-draft { background-color: #fd7e14 !important; border-color: #fd7e14 !important; }
    .event-published { background-color: #198754 !important; border-color: #198754 !important; }
    .event-archived { background-color: #495057 !important; border-color: #495057 !important; }
    
    /* Priority classes */
    .priority-high { border-left: 4px solid #dc3545 !important; }
    .priority-medium { border-left: 4px solid #ffc107 !important; }
    .priority-low { border-left: 4px solid #28a745 !important; }
    
    /* Responsive adjustments */
    @media (max-width: 768px) {
        .calendar-toolbar {
            flex-direction: column;
            align-items: stretch;
        }
        
        .calendar-actions, .calendar-legend {
            justify-content: center;
        }
        
        .stat-card {
            margin-bottom: 15px;
        }
        
        #calendar {
            padding: 10px;
        }
        
        .fc-toolbar {
            flex-direction: column !important;
            gap: 10px !important;
        }
        
        .fc-toolbar-chunk {
            display: flex !important;
            justify-content: center !important;
            flex-wrap: wrap !important;
            gap: 5px !important;
        }
    }
    
    /* Modal customizations */
    .modal-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-bottom: none;
    }
    
    .modal-header .btn-close {
        filter: brightness(0) invert(1);
    }
    
    .modal-body {
        padding: 25px;
    }
    
    .form-label {
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
    }
    
    .form-control, .form-select {
        border-radius: 8px;
        border: 2px solid #e9ecef;
        padding: 12px 15px;
        transition: all 0.3s ease;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
    }
    
    .btn {
        border-radius: 8px;
        padding: 10px 20px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    /* Loading states */
    .loading {
        position: relative;
        opacity: 0.7;
        pointer-events: none;
    }
    
    .loading::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 20px;
        height: 20px;
        margin: -10px 0 0 -10px;
        border: 2px solid #007bff;
        border-radius: 50%;
        border-top-color: transparent;
        animation: spin 1s ease-in-out infinite;
    }
    
    @keyframes spin {
        to { transform: rotate(360deg); }
    }
    
    /* Tooltip styles */
    .fc-event-tooltip {
        background: rgba(0,0,0,0.9);
        color: white;
        padding: 10px;
        border-radius: 6px;
        font-size: 0.85rem;
        max-width: 250px;
        z-index: 10000;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    }
    
    /* Search and filter styles */
    .search-filter-container {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        padding: 20px;
        margin-bottom: 20px;
    }
    
    .search-row {
        display: flex;
        gap: 15px;
        align-items: end;
        flex-wrap: wrap;
    }
    
    .search-group {
        flex: 1;
        min-width: 200px;
    }
    
    .upcoming-events {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        padding: 20px;
        margin-top: 30px;
    }
    
    .upcoming-event-item {
        padding: 12px;
        border-left: 4px solid #007bff;
        background: #f8f9fa;
        border-radius: 6px;
        margin-bottom: 10px;
        transition: all 0.3s ease;
    }
    
    .upcoming-event-item:hover {
        background: #e9ecef;
        transform: translateX(5px);
    }
    
    .upcoming-event-title {
        font-weight: 600;
        margin-bottom: 5px;
    }
    
    .upcoming-event-date {
        color: #6c757d;
        font-size: 0.9rem;
    }
</style>

<div class="container-fluid">
    <!-- Calendar Header -->
    <div class="calendar-header text-center">
        <div class="container">
            <h1 class="mb-2">
                <i class="fas fa-calendar-alt me-3"></i>
                {{modelPluralTitle}} Calendar
            </h1>
            <p class="mb-0 opacity-75">Manage and view your {{modelTitle}} events in an interactive calendar</p>
        </div>
    </div>

    <!-- Calendar Statistics -->
    <div class="calendar-stats">
        <div class="row" id="calendar-stats">
            <div class="col-md-2 col-sm-4 col-6 mb-3">
                <div class="stat-card">
                    <div class="stat-number" id="total-events">-</div>
                    <div class="stat-label">Total Events</div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4 col-6 mb-3">
                <div class="stat-card">
                    <div class="stat-number" id="today-events">-</div>
                    <div class="stat-label">Today</div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4 col-6 mb-3">
                <div class="stat-card">
                    <div class="stat-number" id="week-events">-</div>
                    <div class="stat-label">This Week</div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4 col-6 mb-3">
                <div class="stat-card">
                    <div class="stat-number" id="month-events">-</div>
                    <div class="stat-label">This Month</div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4 col-6 mb-3">
                <div class="stat-card">
                    <div class="stat-number" id="upcoming-events">-</div>
                    <div class="stat-label">Upcoming</div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4 col-6 mb-3">
                <div class="stat-card">
                    <div class="stat-number" id="past-events">-</div>
                    <div class="stat-label">Past Events</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="search-filter-container">
        <div class="search-row">
            <div class="search-group">
                <label for="event-search" class="form-label">
                    <i class="fas fa-search me-2"></i>Search Events
                </label>
                <input type="text" id="event-search" class="form-control" placeholder="Search by title or description...">
            </div>
            <div class="search-group">
                <label for="status-filter" class="form-label">
                    <i class="fas fa-filter me-2"></i>Filter by Status
                </label>
                <select id="status-filter" class="form-select">
                    <option value="">All Statuses</option>
                    <option value="active">Active</option>
                    <option value="inactive">Inactive</option>
                    <option value="pending">Pending</option>
                    <option value="completed">Completed</option>
                    <option value="cancelled">Cancelled</option>
                    <option value="draft">Draft</option>
                    <option value="published">Published</option>
                    <option value="archived">Archived</option>
                </select>
            </div>
            <div class="search-group">
                <label for="date-range" class="form-label">
                    <i class="fas fa-calendar-day me-2"></i>Date Range
                </label>
                <select id="date-range" class="form-select">
                    <option value="">All Dates</option>
                    <option value="today">Today</option>
                    <option value="tomorrow">Tomorrow</option>
                    <option value="this-week">This Week</option>
                    <option value="next-week">Next Week</option>
                    <option value="this-month">This Month</option>
                    <option value="next-month">Next Month</option>
                </select>
            </div>
            <div class="search-group">
                <label class="form-label">&nbsp;</label>
                <div class="d-flex gap-2">
                    <button type="button" id="search-btn" class="btn btn-primary">
                        <i class="fas fa-search me-2"></i>Search
                    </button>
                    <button type="button" id="clear-search-btn" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-2"></i>Clear
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Calendar Container -->
    <div class="calendar-container">
        <!-- Calendar Toolbar -->
        <div class="calendar-toolbar">
            <div class="calendar-actions">
                <button type="button" class="btn btn-success" id="add-event-btn">
                    <i class="fas fa-plus me-2"></i>Add Event
                </button>
                <button type="button" class="btn btn-info" id="refresh-calendar-btn">
                    <i class="fas fa-sync-alt me-2"></i>Refresh
                </button>
                <div class="dropdown">
                    <button class="btn btn-outline-primary dropdown-toggle" type="button" id="export-dropdown" data-bs-toggle="dropdown">
                        <i class="fas fa-download me-2"></i>Export
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="exportCalendar('ical')">
                            <i class="fas fa-calendar me-2"></i>iCal (.ics)
                        </a></li>
                        <li><a class="dropdown-item" href="#" onclick="exportCalendar('csv')">
                            <i class="fas fa-file-csv me-2"></i>CSV
                        </a></li>
                        <li><a class="dropdown-item" href="#" onclick="exportCalendar('json')">
                            <i class="fas fa-file-code me-2"></i>JSON
                        </a></li>
                    </ul>
                </div>
                <button type="button" class="btn btn-outline-dark" id="toggle-view-btn">
                    <i class="fas fa-th me-2"></i>Toggle View
                </button>
            </div>
            
            <div class="calendar-legend">
                <span class="fw-bold me-3">Status Legend:</span>
                <div class="legend-item">
                    <span class="legend-color" style="background-color: #28a745;"></span>
                    <span>Active</span>
                </div>
                <div class="legend-item">
                    <span class="legend-color" style="background-color: #ffc107;"></span>
                    <span>Pending</span>
                </div>
                <div class="legend-item">
                    <span class="legend-color" style="background-color: #17a2b8;"></span>
                    <span>Completed</span>
                </div>
                <div class="legend-item">
                    <span class="legend-color" style="background-color: #dc3545;"></span>
                    <span>Cancelled</span>
                </div>
                <div class="legend-item">
                    <span class="legend-color" style="background-color: #6c757d;"></span>
                    <span>Inactive</span>
                </div>
            </div>
        </div>
        
        <!-- Calendar -->
        <div id="calendar"></div>
    </div>

    <!-- Upcoming Events Sidebar -->
    <div class="row mt-4">
        <div class="col-lg-8">
            <!-- Calendar occupies main area -->
        </div>
        <div class="col-lg-4">
            <div class="upcoming-events">
                <h5 class="mb-3">
                    <i class="fas fa-clock me-2 text-primary"></i>Upcoming Events
                </h5>
                <div id="upcoming-events-list">
                    <div class="text-center text-muted py-3">
                        <i class="fas fa-spinner fa-spin me-2"></i>Loading upcoming events...
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Event Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventModalLabel">
                    <i class="fas fa-calendar-plus me-2"></i>Add Event
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="eventForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="event-title" class="form-label">
                                    <i class="fas fa-heading me-2"></i>Title *
                                </label>
                                <input type="text" class="form-control" id="event-title" name="title" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="event-status" class="form-label">
                                    <i class="fas fa-flag me-2"></i>Status
                                </label>
                                <select class="form-select" id="event-status" name="status">
                                    <option value="active">Active</option>
                                    <option value="inactive">Inactive</option>
                                    <option value="pending">Pending</option>
                                    <option value="completed">Completed</option>
                                    <option value="cancelled">Cancelled</option>
                                    <option value="draft">Draft</option>
                                    <option value="published">Published</option>
                                    <option value="archived">Archived</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="event-start" class="form-label">
                                    <i class="fas fa-play me-2"></i>Start Date & Time *
                                </label>
                                <input type="datetime-local" class="form-control" id="event-start" name="start" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="event-end" class="form-label">
                                    <i class="fas fa-stop me-2"></i>End Date & Time
                                </label>
                                <input type="datetime-local" class="form-control" id="event-end" name="end">
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="event-description" class="form-label">
                            <i class="fas fa-align-left me-2"></i>Description
                        </label>
                        <textarea class="form-control" id="event-description" name="description" rows="3" placeholder="Enter event description..."></textarea>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="event-priority" class="form-label">
                                    <i class="fas fa-exclamation-triangle me-2"></i>Priority
                                </label>
                                <select class="form-select" id="event-priority" name="priority">
                                    <option value="low">Low</option>
                                    <option value="medium" selected>Medium</option>
                                    <option value="high">High</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="event-category" class="form-label">
                                    <i class="fas fa-tags me-2"></i>Category
                                </label>
                                <input type="text" class="form-control" id="event-category" name="category" placeholder="e.g., Meeting, Appointment">
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="event-all-day" name="all_day">
                            <label class="form-check-label" for="event-all-day">
                                <i class="fas fa-clock me-2"></i>All Day Event
                            </label>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="event-recurring" name="recurring">
                            <label class="form-check-label" for="event-recurring">
                                <i class="fas fa-redo me-2"></i>Recurring Event
                            </label>
                        </div>
                    </div>
                    
                    <div id="recurring-options" class="mb-3" style="display: none;">
                        <label for="event-recurring-frequency" class="form-label">
                            <i class="fas fa-calendar-week me-2"></i>Repeat Frequency
                        </label>
                        <select class="form-select" id="event-recurring-frequency" name="recurring_frequency">
                            <option value="daily">Daily</option>
                            <option value="weekly">Weekly</option>
                            <option value="monthly">Monthly</option>
                            <option value="yearly">Yearly</option>
                        </select>
                    </div>
                    
                    <input type="hidden" id="event-id" name="id">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <button type="button" class="btn btn-danger" id="delete-event-btn" style="display: none;">
                    <i class="fas fa-trash me-2"></i>Delete Event
                </button>
                <button type="button" class="btn btn-primary" id="save-event-btn">
                    <i class="fas fa-save me-2"></i>Save Event
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Event Details Modal -->
<div class="modal fade" id="eventDetailsModal" tabindex="-1" aria-labelledby="eventDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventDetailsModalLabel">
                    <i class="fas fa-calendar-day me-2"></i>Event Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="eventDetailsContent">
                <!-- Event details will be populated here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Close
                </button>
                <button type="button" class="btn btn-primary" id="edit-event-btn">
                    <i class="fas fa-edit me-2"></i>Edit Event
                </button>
                <a href="#" class="btn btn-info" id="view-event-btn" target="_blank">
                    <i class="fas fa-external-link-alt me-2"></i>View Full Details
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div id="loading-overlay" class="position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center" style="background: rgba(255,255,255,0.8); z-index: 9999; display: none !important;">
    <div class="text-center">
        <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="mt-3 text-primary fw-bold">Processing...</div>
    </div>
</div>

<!-- FullCalendar JS -->
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.5/main.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    let calendar;
    let currentEvent = null;
    const calendarEl = document.getElementById('calendar');
    
    // API endpoints
    const API_BASE = '/api/{{getModuleInput}}/{{getNameInput}}/calendar';
    const EVENTS_URL = `${API_BASE}/events`;
    const STATS_URL = `${API_BASE}/statistics`;
    const CREATE_URL = `${API_BASE}/create`;
    const UPDATE_URL = `${API_BASE}/update`;
    const DELETE_URL = `${API_BASE}/delete`;
    const EXPORT_URL = `${API_BASE}/export`;
    
    // Initialize calendar
    initializeCalendar();
    
    // Load initial data
    loadCalendarStatistics();
    loadUpcomingEvents();
    
    // Event listeners
    setupEventListeners();
    
    function initializeCalendar() {
        calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
            },
            editable: true,
            selectable: true,
            selectMirror: true,
            dayMaxEvents: true,
            weekends: true,
            height: 'auto',
            aspectRatio: 1.8,
            eventDisplay: 'block',
            displayEventTime: true,
            allDaySlot: false,
            slotMinTime: '06:00:00',
            slotMaxTime: '22:00:00',
            slotDuration: '00:30:00',
            snapDuration: '00:15:00',
            businessHours: {
                daysOfWeek: [1, 2, 3, 4, 5],
                startTime: '09:00',
                endTime: '17:00',
            },
            nowIndicator: true,
            navLinks: true,
            weekNumbers: false,
            eventLimit: true,
            eventLimitText: 'more',
            timeZone: 'local',
            firstDay: 1,
            fixedWeekCount: false,
            showNonCurrentDates: false,
            lazyFetching: true,
            eventOrder: 'start,-duration,allDay,title',
            
            // Event sources
            eventSources: [{
                url: EVENTS_URL,
                method: 'GET',
                failure: function() {
                    showAlert('Error loading events. Please try again.', 'danger');
                }
            }],
            
            // Event handling
            select: function(info) {
                openEventModal(null, info.start, info.end);
            },
            
            eventClick: function(info) {
                showEventDetails(info.event);
            },
            
            eventDrop: function(info) {
                updateEventDates(info.event, info.event.start, info.event.end);
            },
            
            eventResize: function(info) {
                updateEventDates(info.event, info.event.start, info.event.end);
            },
            
            eventMouseEnter: function(info) {
                showEventTooltip(info.event, info.el);
            },
            
            eventMouseLeave: function(info) {
                hideEventTooltip();
            },
            
            datesSet: function(info) {
                loadCalendarStatistics();
                loadUpcomingEvents();
            }
        });
        
        calendar.render();
    }
    
    function setupEventListeners() {
        // Add event button
        document.getElementById('add-event-btn').addEventListener('click', function() {
            openEventModal();
        });
        
        // Refresh calendar button
        document.getElementById('refresh-calendar-btn').addEventListener('click', function() {
            refreshCalendar();
        });
        
        // Toggle view button
        document.getElementById('toggle-view-btn').addEventListener('click', function() {
            toggleCalendarView();
        });
        
        // Search functionality
        document.getElementById('search-btn').addEventListener('click', function() {
            performSearch();
        });
        
        document.getElementById('clear-search-btn').addEventListener('click', function() {
            clearSearch();
        });
        
        // Enter key for search
        document.getElementById('event-search').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                performSearch();
            }
        });
        
        // Modal form handling
        document.getElementById('save-event-btn').addEventListener('click', function() {
            saveEvent();
        });
        
        document.getElementById('delete-event-btn').addEventListener('click', function() {
            deleteEvent();
        });
        
        document.getElementById('edit-event-btn').addEventListener('click', function() {
            editCurrentEvent();
        });
        
        // Recurring event toggle
        document.getElementById('event-recurring').addEventListener('change', function() {
            const recurringOptions = document.getElementById('recurring-options');
            recurringOptions.style.display = this.checked ? 'block' : 'none';
        });
        
        // All day event toggle
        document.getElementById('event-all-day').addEventListener('change', function() {
            const startInput = document.getElementById('event-start');
            const endInput = document.getElementById('event-end');
            
            if (this.checked) {
                // Convert to date only
                startInput.type = 'date';
                endInput.type = 'date';
            } else {
                // Convert to datetime
                startInput.type = 'datetime-local';
                endInput.type = 'datetime-local';
            }
        });
        
        // Filter change handlers
        document.getElementById('status-filter').addEventListener('change', function() {
            applyFilters();
        });
        
        document.getElementById('date-range').addEventListener('change', function() {
            applyFilters();
        });
    }
    
    function openEventModal(event = null, startDate = null, endDate = null) {
        const modal = new bootstrap.Modal(document.getElementById('eventModal'));
        const form = document.getElementById('eventForm');
        const modalTitle = document.getElementById('eventModalLabel');
        const deleteBtn = document.getElementById('delete-event-btn');
        
        // Reset form
        form.reset();
        currentEvent = event;
        
        if (event) {
            // Edit mode
            modalTitle.innerHTML = '<i class="fas fa-edit me-2"></i>Edit Event';
            deleteBtn.style.display = 'inline-block';
            
            // Populate form with event data
            document.getElementById('event-id').value = event.id;
            document.getElementById('event-title').value = event.title;
            document.getElementById('event-status').value = event.extendedProps.status || 'active';
            document.getElementById('event-description').value = event.extendedProps.description || '';
            document.getElementById('event-priority').value = event.extendedProps.priority || 'medium';
            document.getElementById('event-category').value = event.extendedProps.category || '';
            
            // Format dates for input
            const startISO = new Date(event.start).toISOString().slice(0, 16);
            const endISO = event.end ? new Date(event.end).toISOString().slice(0, 16) : '';
            
            document.getElementById('event-start').value = startISO;
            document.getElementById('event-end').value = endISO;
            
            // Handle all day events
            if (event.allDay) {
                document.getElementById('event-all-day').checked = true;
                document.getElementById('event-start').type = 'date';
                document.getElementById('event-end').type = 'date';
                document.getElementById('event-start').value = event.start.toISOString().slice(0, 10);
                if (event.end) {
                    document.getElementById('event-end').value = event.end.toISOString().slice(0, 10);
                }
            }
            
            // Handle recurring events
            if (event.extendedProps.recurring) {
                document.getElementById('event-recurring').checked = true;
                document.getElementById('recurring-options').style.display = 'block';
                document.getElementById('event-recurring-frequency').value = event.extendedProps.recurring_frequency || 'weekly';
            }
        } else {
            // Add mode
            modalTitle.innerHTML = '<i class="fas fa-plus me-2"></i>Add Event';
            deleteBtn.style.display = 'none';
            
            // Set default dates if provided
            if (startDate) {
                const startISO = startDate.toISOString().slice(0, 16);
                document.getElementById('event-start').value = startISO;
            }
            
            if (endDate) {
                const endISO = endDate.toISOString().slice(0, 16);
                document.getElementById('event-end').value = endISO;
            }
        }
        
        modal.show();
    }
    
    function saveEvent() {
        const form = document.getElementById('eventForm');
        const formData = new FormData(form);
        const eventData = Object.fromEntries(formData.entries());
        
        // Validate required fields
        if (!eventData.title || !eventData.start) {
            showAlert('Please fill in all required fields.', 'warning');
            return;
        }
        
        // Show loading
        showLoading(true);
        
        const url = eventData.id ? `${UPDATE_URL}/${eventData.id}` : CREATE_URL;
        const method = eventData.id ? 'PUT' : 'POST';
        
        fetch(url, {
            method: method,
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify(eventData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showAlert(data.message || 'Event saved successfully!', 'success');
                closeEventModal();
                refreshCalendar();
                loadCalendarStatistics();
                loadUpcomingEvents();
            } else {
                showAlert(data.message || 'Error saving event.', 'danger');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showAlert('Error saving event. Please try again.', 'danger');
        })
        .finally(() => {
            showLoading(false);
        });
    }
    
    function deleteEvent() {
        if (!currentEvent || !currentEvent.id) {
            showAlert('No event selected for deletion.', 'warning');
            return;
        }
        
        if (!confirm('Are you sure you want to delete this event? This action cannot be undone.')) {
            return;
        }
        
        showLoading(true);
        
        fetch(`${DELETE_URL}/${currentEvent.id}`, {
            method: 'DELETE',
            headers: {
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showAlert(data.message || 'Event deleted successfully!', 'success');
                closeEventModal();
                refreshCalendar();
                loadCalendarStatistics();
                loadUpcomingEvents();
            } else {
                showAlert(data.message || 'Error deleting event.', 'danger');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showAlert('Error deleting event. Please try again.', 'danger');
        })
        .finally(() => {
            showLoading(false);
        });
    }
    
    function updateEventDates(event, newStart, newEnd) {
        const eventData = {
            start: newStart.toISOString(),
            end: newEnd ? newEnd.toISOString() : null
        };
        
        fetch(`${UPDATE_URL}/${event.id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify(eventData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showAlert('Event updated successfully!', 'success');
                loadCalendarStatistics();
                loadUpcomingEvents();
            } else {
                showAlert(data.message || 'Error updating event.', 'danger');
                // Revert the change
                event.setStart(event.start);
                event.setEnd(event.end);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showAlert('Error updating event. Please try again.', 'danger');
            // Revert the change
            event.setStart(event.start);
            event.setEnd(event.end);
        });
    }
    
    function showEventDetails(event) {
        const modal = new bootstrap.Modal(document.getElementById('eventDetailsModal'));
        const content = document.getElementById('eventDetailsContent');
        const viewBtn = document.getElementById('view-event-btn');
        
        currentEvent = event;
        
        // Build event details HTML
        const details = `
            <div class="row">
                <div class="col-md-6">
                    <h6 class="text-primary"><i class="fas fa-heading me-2"></i>Title</h6>
                    <p class="mb-3">${event.title}</p>
                </div>
                <div class="col-md-6">
                    <h6 class="text-primary"><i class="fas fa-flag me-2"></i>Status</h6>
                    <p class="mb-3">
                        <span class="badge bg-${getStatusColor(event.extendedProps.status)}">
                            ${(event.extendedProps.status || 'default').toUpperCase()}
                        </span>
                    </p>
                </div>
            </div>
            
            <div class="row">
                <div class="col-md-6">
                    <h6 class="text-primary"><i class="fas fa-play me-2"></i>Start Date</h6>
                    <p class="mb-3">${formatEventDate(event.start)}</p>
                </div>
                <div class="col-md-6">
                    <h6 class="text-primary"><i class="fas fa-stop me-2"></i>End Date</h6>
                    <p class="mb-3">${event.end ? formatEventDate(event.end) : 'Not specified'}</p>
                </div>
            </div>
            
            ${event.extendedProps.description ? `
                <div class="mb-3">
                    <h6 class="text-primary"><i class="fas fa-align-left me-2"></i>Description</h6>
                    <p class="mb-3">${event.extendedProps.description}</p>
                </div>
            ` : ''}
            
            <div class="row">
                <div class="col-md-6">
                    <h6 class="text-primary"><i class="fas fa-exclamation-triangle me-2"></i>Priority</h6>
                    <p class="mb-3">
                        <span class="badge bg-${getPriorityColor(event.extendedProps.priority)}">
                            ${(event.extendedProps.priority || 'medium').toUpperCase()}
                        </span>
                    </p>
                </div>
                <div class="col-md-6">
                    <h6 class="text-primary"><i class="fas fa-tags me-2"></i>Category</h6>
                    <p class="mb-3">${event.extendedProps.category || 'Not specified'}</p>
                </div>
            </div>
            
            <div class="row">
                <div class="col-md-6">
                    <h6 class="text-primary"><i class="fas fa-calendar-plus me-2"></i>Created</h6>
                    <p class="mb-3">${formatEventDate(new Date(event.extendedProps.created_at))}</p>
                </div>
                <div class="col-md-6">
                    <h6 class="text-primary"><i class="fas fa-edit me-2"></i>Last Updated</h6>
                    <p class="mb-3">${formatEventDate(new Date(event.extendedProps.updated_at))}</p>
                </div>
            </div>
            
            ${event.extendedProps.recurring ? `
                <div class="alert alert-info">
                    <i class="fas fa-redo me-2"></i>
                    This is a recurring event (${event.extendedProps.recurring_frequency || 'weekly'})
                </div>
            ` : ''}
        `;
        
        content.innerHTML = details;
        viewBtn.href = `/{{getModuleInput}}/{{getNameInput}}/show/${event.id}`;
        
        modal.show();
    }
    
    function editCurrentEvent() {
        if (currentEvent) {
            const detailsModal = bootstrap.Modal.getInstance(document.getElementById('eventDetailsModal'));
            detailsModal.hide();
            openEventModal(currentEvent);
        }
    }
    
    function closeEventModal() {
        const modal = bootstrap.Modal.getInstance(document.getElementById('eventModal'));
        if (modal) {
            modal.hide();
        }
        currentEvent = null;
    }
    
    function refreshCalendar() {
        calendar.refetchEvents();
        loadCalendarStatistics();
        loadUpcomingEvents();
        showAlert('Calendar refreshed successfully!', 'info');
    }
    
    function toggleCalendarView() {
        const currentView = calendar.view.type;
        let newView;
        
        switch (currentView) {
            case 'dayGridMonth':
                newView = 'timeGridWeek';
                break;
            case 'timeGridWeek':
                newView = 'timeGridDay';
                break;
            case 'timeGridDay':
                newView = 'listWeek';
                break;
            default:
                newView = 'dayGridMonth';
        }
        
        calendar.changeView(newView);
    }
    
    function loadCalendarStatistics() {
        fetch(STATS_URL)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const stats = data.statistics;
                document.getElementById('total-events').textContent = stats.total_events;
                document.getElementById('today-events').textContent = stats.today_events;
                document.getElementById('week-events').textContent = stats.week_events;
                document.getElementById('month-events').textContent = stats.month_events;
                document.getElementById('upcoming-events').textContent = stats.upcoming_events;
                document.getElementById('past-events').textContent = stats.past_events;
            }
        })
        .catch(error => {
            console.error('Error loading statistics:', error);
        });
    }
    
    function loadUpcomingEvents() {
        const container = document.getElementById('upcoming-events-list');
        
        fetch(`${API_BASE}/upcoming`)
        .then(response => response.json())
        .then(data => {
            if (data.success && data.events.length > 0) {
                container.innerHTML = data.events.map(event => `
                    <div class="upcoming-event-item" style="border-left-color: ${event.color}">
                        <div class="upcoming-event-title">
                            <a href="${event.url}" class="text-decoration-none">
                                ${event.title}
                            </a>
                        </div>
                        <div class="upcoming-event-date">
                            <i class="fas fa-clock me-1"></i>
                            ${event.date} (${event.time_until})
                        </div>
                        <div class="mt-1">
                            <span class="badge bg-${getStatusColor(event.status)} me-2">
                                ${event.status.toUpperCase()}
                            </span>
                        </div>
                    </div>
                `).join('');
            } else {
                container.innerHTML = `
                    <div class="text-center text-muted py-3">
                        <i class="fas fa-calendar-check me-2"></i>
                        No upcoming events
                    </div>
                `;
            }
        })
        .catch(error => {
            console.error('Error loading upcoming events:', error);
            container.innerHTML = `
                <div class="text-center text-danger py-3">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Error loading upcoming events
                </div>
            `;
        });
    }
    
    function performSearch() {
        const searchTerm = document.getElementById('event-search').value;
        const statusFilter = document.getElementById('status-filter').value;
        const dateRange = document.getElementById('date-range').value;
        
        // Build search parameters
        const params = new URLSearchParams();
        if (searchTerm) params.append('search', searchTerm);
        if (statusFilter) params.append('status', statusFilter);
        if (dateRange) params.append('date_range', dateRange);
        
        // Update calendar event source
        calendar.getEventSourceById('default')?.remove();
        calendar.addEventSource({
            url: `${EVENTS_URL}?${params.toString()}`,
            method: 'GET',
            failure: function() {
                showAlert('Error loading filtered events.', 'danger');
            }
        });
        
        showAlert('Search applied successfully!', 'info');
    }
    
    function clearSearch() {
        document.getElementById('event-search').value = '';
        document.getElementById('status-filter').value = '';
        document.getElementById('date-range').value = '';
        
        // Reset calendar event source
        calendar.getEventSourceById('default')?.remove();
        calendar.addEventSource({
            url: EVENTS_URL,
            method: 'GET',
            failure: function() {
                showAlert('Error loading events.', 'danger');
            }
        });
        
        showAlert('Search cleared!', 'info');
    }
    
    function applyFilters() {
        performSearch();
    }
    
    function exportCalendar(format) {
        const currentView = calendar.view;
        const start = currentView.activeStart.toISOString();
        const end = currentView.activeEnd.toISOString();
        
        const url = `${EXPORT_URL}?format=${format}&start=${start}&end=${end}`;
        
        // Create temporary link to download file
        const link = document.createElement('a');
        link.href = url;
        link.download = `calendar_events.${format}`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        showAlert(`Calendar exported as ${format.toUpperCase()}!`, 'success');
    }
    
    function showEventTooltip(event, element) {
        const tooltip = document.createElement('div');
        tooltip.className = 'fc-event-tooltip';
        tooltip.innerHTML = event.extendedProps.tooltip || event.title;
        
        document.body.appendChild(tooltip);
        
        const rect = element.getBoundingClientRect();
        tooltip.style.position = 'absolute';
        tooltip.style.left = rect.left + 'px';
        tooltip.style.top = (rect.top - tooltip.offsetHeight - 10) + 'px';
        
        element._tooltip = tooltip;
    }
    
    function hideEventTooltip() {
        const tooltips = document.querySelectorAll('.fc-event-tooltip');
        tooltips.forEach(tooltip => tooltip.remove());
    }
    
    function showLoading(show) {
        const overlay = document.getElementById('loading-overlay');
        overlay.style.display = show ? 'flex' : 'none';
    }
    
    function showAlert(message, type) {
        // Create alert element
        const alert = document.createElement('div');
        alert.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
        alert.style.cssText = 'top: 20px; right: 20px; z-index: 10000; min-width: 300px;';
        alert.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        
        document.body.appendChild(alert);
        
        // Auto remove after 5 seconds
        setTimeout(() => {
            if (alert.parentNode) {
                alert.remove();
            }
        }, 5000);
    }
    
    function formatEventDate(date) {
        return new Date(date).toLocaleString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    }
    
    function getStatusColor(status) {
        const colors = {
            'active': 'success',
            'inactive': 'secondary',
            'pending': 'warning',
            'completed': 'info',
            'cancelled': 'danger',
            'draft': 'warning',
            'published': 'success',
            'archived': 'dark'
        };
        return colors[status] || 'primary';
    }
    
    function getPriorityColor(priority) {
        const colors = {
            'high': 'danger',
            'medium': 'warning',
            'low': 'success'
        };
        return colors[priority] || 'primary';
    }
});
</script>
@endsection