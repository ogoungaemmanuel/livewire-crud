<?php

namespace Modules\{{getModuleInputModuleNew}}\Livewire\{{modelPluralName}};

use Livewire\Component;
use Livewire\WithPagination;
use Modules\{{getModuleInputModule}}\Models\{{modelName}};
use Carbon\Carbon;
use Livewire\Attributes\On;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Storage;
use Intervention\Image\Facades\Image;
use Livewire\Features\SupportFileUploads\WithFileUploads;

class Create extends Component
{
    use WithPagination;
    use WithFileUploads;
	protected $paginationTheme = 'bootstrap';
    public $selected_id, $newimage, {{updatefield}};
    public $indexSearch = '';
    public $selecteditem = [];
    protected $queryString = ['indexSearch'];
    public $updateMode = false;
    #[On('closeModal')]

     // public function mount()
    // {
    //     $this->posted_by = User_Detail()->name;
    //     $this->status = 'active';
    // }

    public function render()
    {
        return view('{{getModuleInput}}::livewire.{{modelNamePluralLowerCase}}.create');
    }

    public function updatingSearch()
    {
        $this->resetPage();
    }    

    public function store()
    {
        $this->validate([{{rules}}
        ]);

         // if (!$this->newimage) {
        //     $photo = $this->photo;
        // }else{
        //     $photo = $this->storeImage();
        // }


        {{modelName}}::create([ {{addfields}}
        ]);

		$this->dispatch('refresh-the-component');
        $this->dispatch('hideModal');
        flash()->addSuccess('{{modelName}} Successfully created!');
		// session()->flash('message', '{{modelName}} Successfully created.');
        // return $this->redirect('/{{getModuleInput}}/{{getNameInput}}',navigate:true);
    }

      public function storeImage()
    {
        if (!$this->newimage) {
            return null;
        }

        $image = $this->newimage;
        $path = base_path("public/uploads/images/{{modelName}}/");
        $ImageName = time().'.'.$image->getClientOriginalExtension();
        if (!File::exists($path)) {
            File::makeDirectory($path, 0777, true, true);
          }
          if(File::exists(public_path('uploads/images/{{modelName}}/{{modelName}}' . $this->photo))){
            File::delete(public_path('uploads/images/{{modelName}}/{{modelName}}' . $this->photo));
          }
        Image::make($image)->resize(1024, 625)->save(public_path('uploads/images/{{modelName}}/{{modelName}}') . $ImageName);
        return $ImageName;
    }

    

}
