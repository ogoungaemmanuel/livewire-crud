<?php

namespace Modules\{{getModuleInputModule}}\App\Http\Controllers;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Log;
use Intervention\Image\Laravel\Facades\Image;

class {{modelPluralName}}Controller extends Controller
{
    public function uploadPhoto(Request $request)
    {
        try {
            // Validate the request
            $request->validate([
                'photo' => 'required|image|mimes:jpeg,png,jpg,gif,webp|max:2048',
            ]);

            if (!$request->hasFile('photo')) {
                return response()->json([
                    'success' => false,
                    'message' => 'No file uploaded'
                ], 400);
            }

            $image = $request->file('photo');
            $path = "uploads/images/{{modelPluralName}}/";
            $fullPath = public_path($path);

            // Create directory if it doesn't exist
            if (!File::exists($fullPath)) {
                File::makeDirectory($fullPath, 0777, true, true);
            }

            // Delete old file if exists
            if ($request->has('old_file') && $request->old_file) {
                $oldFilePath = $fullPath . $request->old_file;
                if (File::exists($oldFilePath)) {
                    File::delete($oldFilePath);
                    Log::info('Old {{modelPluralName}} photo deleted: ' . $oldFilePath);
                }
            }

            // Generate unique filename
            $imageName = '{{modelPluralName}}' . time() . '.' . $image->getClientOriginalExtension();

            // Try to use Intervention Image v3+ syntax, fallback to regular move if not available
            try {
                // For Intervention Image v3+
                $img = Image::read($image);
                $img->resize(1024, 625);
                $img->save($fullPath . $imageName);
            } catch (\Exception $imageException) {
                // Fallback to regular file move if Intervention Image fails
                Log::warning('Intervention Image failed, using fallback: ' . $imageException->getMessage());
                $image->move($fullPath, $imageName);
            }

            return response()->json([
                'success' => true,
                'path' => $imageName,
                'url' => asset($path . $imageName),
                'message' => 'Photo uploaded successfully'
            ]);

        } catch (\Illuminate\Validation\ValidationException $e) {
            return response()->json([
                'success' => false,
                'message' => 'Validation failed: ' . implode(', ', $e->errors()['photo'] ?? ['Invalid file'])
            ], 422);
        } catch (\Exception $e) {
            Log::error('{{modelPluralName}} photo upload error: ' . $e->getMessage() . ' | Trace: ' . $e->getTraceAsString());

            return response()->json([
                'success' => false,
                'message' => 'Upload failed: ' . $e->getMessage()
            ], 500);
        }
    }
}
